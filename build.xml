<?xml version="1.0" encoding="UTF-8"?>
<project name="Fernflower" default="dist" basedir=".">

  <target name="init">
    <property name="src" value="${basedir}/src"/>
    <property name="out" value="${basedir}/out/production"/>
    <property name="dist" value="${basedir}/fernflower.jar"/>
    <property name="test-src" value="${basedir}/test"/>
    <property name="test-out" value="${basedir}/out/test"/>
    <property name="test-data" value="${basedir}/testData"/>
  </target>

  <!-- external dependencies, adjust to your own -->
  <path id="junit">
    <file name="../junit-4.12.jar"/>
    <file name="../hamcrest-core-1.3.jar"/>
    <file name="../hamcrest-library-1.3.jar"/>
  </path>

  <target name="clean" depends="init">
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="${out}"/>
      <fileset dir="${test-out}"/>
      <fileset file="${dist}"/>
    </delete>
  </target>

  <target name="compile" depends="init,clean">
    <mkdir dir="${out}"/>
    <javac srcdir="${src}" destdir="${out}" source="1.8" target="1.8" encoding="UTF-8" debug="true" includeantruntime="false"/>
  </target>

  <target name="dist" depends="init,compile">
    <jar jarfile="${dist}" compress="true" basedir="${out}" includes="**/*.class">
      <manifest>
        <attribute name="Main-Class" value="org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler"/>
      </manifest>
    </jar>
  </target>

  <target name="test-compile" depends="init,compile">
    <mkdir dir="${test-out}"/>
    <javac srcdir="${test-src}" destdir="${test-out}" source="1.8" target="1.8" encoding="UTF-8" debug="true" includeantruntime="false">
      <classpath path="${out}"/>
      <classpath refid="junit"/>
    </javac>
  </target>


  <target name="test" depends="test-normal,test-stdout"/>

  <target name="test-normal" depends="init,test-compile">
    <junit printsummary="true" failureproperty="tests.failed" fork="true">
      <classpath path="${test-out}:${out}"/>
      <classpath refid="junit"/>
      <batchtest>
        <fileset dir="${test-src}" includes="**/*Test.java"/>
      </batchtest>
    </junit>
    <fail if="tests.failed" message="Tests failed."/>
  </target>


  <target name="test-stdout" depends="init,test-compile,test-stdout-prepare">
    <junit printsummary="true" failureproperty="tests.failed" fork="true">
      <classpath path="${test-out}:${out}"/>
      <classpath refid="junit"/>
      <sysproperty key="stdoutTests.expected.dir" value="${stdoutTests.expected.dir}"/>
      <sysproperty key="stdoutTests.normal.dir"   value="${stdoutTests.normal.dir}"/>
      <sysproperty key="stdoutTests.renaming.dir" value="${stdoutTests.renaming.dir}"/>
      <batchtest >
        <fileset dir="${test-src}" includes="**/StdoutCompareTestRunner.java"/>
      </batchtest>
      <!-- look at output -->
      <formatter type="plain" usefile="false" /> <!-- to screen -->
      <formatter type="plain" /> <!-- to file -->
    </junit>
    <!-- clean up (delete tmp dir with all the output -->
    <!--
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="${stdoutTests.temp.dir}"/>
    </delete>
    -->
    
    <fail if="tests.failed" message="Tests failed."/>
  </target>


  <target name="test-stdout-prepare" depends="init">
    <!--tempfile property="stdoutTests.temp.dir" destDir="${java.io.tmpdir}" prefix="decompiler_test_" suffix="_stdoutTests_dir"/-->
    <property name="stdoutTests.temp.dir" value="tmp_decompiler_test_stdoutTests_dir"/>
    
    <property name="stdoutTests.expected.dir" value="${stdoutTests.temp.dir}/expected"/>
    <property name="stdoutTests.normal.dir" value="${stdoutTests.temp.dir}/normalTest"/>
    <property name="stdoutTests.renaming.dir" value="${stdoutTests.temp.dir}/renamingTest"/>
    
    <!-- delete previous outputs if they exist -->
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="${stdoutTests.expected.dir}"/>
      <fileset dir="${stdoutTests.normal.dir}"/>
      <fileset dir="${stdoutTests.renaming.dir}"/>
    </delete>
    
    <!--mkdir dir="${stdoutTests.temp.dir}" /-->
    <mkdir dir="${stdoutTests.expected.dir}/classes"/>
    <mkdir dir="${stdoutTests.expected.dir}/results"/>
    <mkdir dir="${stdoutTests.normal.dir}/classes"/>
    <!--mkdir dir="${stdoutTests.normal.dir}/decompiled"/-->
    <mkdir dir="${stdoutTests.normal.dir}/results"/>
    <mkdir dir="${stdoutTests.renaming.dir}/classes"/>
    <!--mkdir dir="${stdoutTests.renaming.dir}/decompiled"/-->
    <mkdir dir="${stdoutTests.renaming.dir}/results"/>
    
    <!-- compile the test cases from testData -->
    <javac srcdir="${test-data}/src-stdout/stdoutTests" destdir="${stdoutTests.expected.dir}/classes" source="1.8" target="1.8" encoding="UTF-8" debug="true" includeantruntime="false"/>
    <!-- run test cases from testData, stdout stored to compare later -->
    <java classname="org.jetbrains.java.decompiler.StdoutCompareTestHelper">
      <arg value="run"/>
      <arg value="${stdoutTests.expected.dir}/results"/>
        
      <classpath path="${test-out}"/>
      <classpath path="${out}"/>
      <classpath refid="junit"/>
      <classpath path="${stdoutTests.expected.dir}/classes"/>
    </java>
    <!-- decompile the classes -->
    <java classname="org.jetbrains.java.decompiler.StdoutCompareTestHelper">
      <arg value="decompile"/>
      <arg value="${stdoutTests.expected.dir}/classes"/>
      <arg value="${stdoutTests.normal.dir}"/>
        
      <classpath path="${test-out}"/>
      <classpath path="${out}"/>
      <classpath refid="junit"/>
    </java>
    <!-- decompile the classes using renaming -->
    <java classname="org.jetbrains.java.decompiler.StdoutCompareTestHelper">
      <arg value="decompile-renaming"/>
      <arg value="${stdoutTests.expected.dir}/classes"/>
      <arg value="${stdoutTests.renaming.dir}"/>
    
      <classpath path="${test-out}"/>
      <classpath path="${out}"/>
      <classpath refid="junit"/>
    </java>
    <!-- compile the decompiled classes -->
    <javac srcdir="${stdoutTests.normal.dir}/decompiled" destdir="${stdoutTests.normal.dir}/classes" source="1.8" target="1.8" encoding="UTF-8" debug="true" includeantruntime="false"/>
    <javac srcdir="${stdoutTests.renaming.dir}/decompiled" destdir="${stdoutTests.renaming.dir}/classes" source="1.8" target="1.8" encoding="UTF-8" debug="true" includeantruntime="false"/>
    
    <!-- now run the decompiled classes -->
    <!-- run test cases from decompile -->
    <java classname="org.jetbrains.java.decompiler.StdoutCompareTestHelper">
      <arg value="run"/>
      <arg value="${stdoutTests.normal.dir}/results"/>
        
      <classpath path="${test-out}"/>
      <classpath path="${out}"/>
      <classpath refid="junit"/>
      <classpath path="${stdoutTests.normal.dir}/classes"/>
    </java>
    <!-- run test cases from decompile-renaming -->
    <java classname="org.jetbrains.java.decompiler.StdoutCompareTestHelper">
      <arg value="run"/>
      <arg value="${stdoutTests.renaming.dir}/results"/>
        
      <classpath path="${test-out}"/>
      <classpath path="${out}"/>
      <classpath refid="junit"/>
      <classpath path="${stdoutTests.renaming.dir}/classes"/>
    </java>
  </target>

</project>
